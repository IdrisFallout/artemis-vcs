name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            python-version: '3.12'
            platform: win64
          - os: ubuntu-latest
            python-version: '3.12'
            platform: linux

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build Windows Executable
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --windowed --name artemis-win64 artemis/main.py

      - name: Create Windows Installer
        if: matrix.os == 'windows-latest'
        uses: Muki16/inno-setup-action@v1
        with:
          filepath: artemis_installer.iss

      - name: Build Linux Executable
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --name artemis-linux artemis/main.py
          chmod +x dist/artemis-linux

      - name: Build AppImage
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          mkdir -p artemis.AppDir/usr/bin
          cp dist/artemis-linux artemis.AppDir/usr/bin/
          cp artemis/icon.png artemis.AppDir/
          cp artemis.desktop artemis.AppDir/
          ./appimagetool-x86_64.AppImage artemis.AppDir artemis-${{ matrix.platform }}.AppImage

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-builds
          path: |
            dist/artemis-*
            *.exe
            *.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: List Artifacts
        run: ls -la artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/artemis-win64.exe
            artifacts/artemis-linux
            artifacts/artemis-*.AppImage
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  # Optional: Generate SHA256 checksums
  checksum:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Generate Checksums
        run: |
          cd artifacts
          sha256sum artemis-win64.exe > artemis-win64.exe.sha256
          sha256sum artemis-linux > artemis-linux.sha256
          sha256sum artemis-*.AppImage > artemis-appimage.sha256

      - name: Update Release with Checksums
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*.sha256
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}